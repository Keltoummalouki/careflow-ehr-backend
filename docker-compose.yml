services:
  mongo:
    image: mongo:7.0
    container_name: careflow_mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_DB}
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - careflow_network
  minio:
    image: minio/minio:latest
    container_name: careflow-minio
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: careflow_app
    restart: always
    ports:
      - "5001:3001"
    environment:
      NODE_ENV: ${NODE_ENV}
      PORT: ${PORT}
      MONGO_URI: mongodb://mongo:27017/careflowdb 
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
      - ./certs:/certs:ro
    depends_on:
      - mongo
    networks:
      - careflow_network
    command: ["sh", "-c", "sleep 5 && npm run dev"]

volumes:
  mongo_data:
  minio_data:

networks:
  careflow_network:
    driver: bridge